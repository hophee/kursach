var(gam)
var(bek)
var(gam)
cor(bek, gam)
cor(bek, gam)
cor(bek,gam, method = "spearman")
cor.test(bek, gam)
cor.test(bek,gam, method = "spearman")
?cor.test
cor.test(bek,gam, method = "spearman")
mean(bek)
mean(gam)
var(bek)
var(gam)
ex_a = c(10, 9, 8, 7, 6, 5, 4, 3, 2, 1)
ex_b = c(9, 8, 10, 5, 7, 4, 2, 6, 3, 1)
wilcox.test(ex_a, ex_b)
cor.test(bek, gam)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyr)
install.packages("janitor")
library(janitor)
library(readxl)
spiro_data <-  read_xlsx('/home/iz-user/Documents/univer/kursach/kursovaya.xlsx')
View(spiro_data)
summary(spiro_data)
spiro_data <-  read_xlsx('/home/iz-user/Documents/univer/kursach/kursovaya.xlsx') %>%
janitor::clean_names()
spiro_data %>% filter(pacient == 'П11-3')
spiro_data %>% select(pacient == 'П11-3')
spiro_data %>% select(1:4)
spiro_data %>% filter(pacient == 'П11-3')
library(dplyr)
spiro_data %>% filter(pacient == 'П11-3')
spiro_data %>% filter(pacient == 'П11-3') %>%  select(c(1, 3:19))
spyro_p11_3 <- spiro_data %>% filter(pacient == 'П11-3') %>%  select(c(1, 3:19))
spyro_p11_3[1]
spyro_p11_3[2, 1]
spyro_p11_3[1, 2]
spyro_p11_3[1, 2] - spyro_p11_3[2, 2]
install.packages("clock")
?time_parse
library(clock)
?time
#прочтение оригинальных данных
spiro_data <-  read_xlsx('/home/iz-user/Documents/univer/kursach/kursovaya.xlsx') %>%
janitor::clean_names()
library(tidyr)
library(janitor)
library(readxl)
library(dplyr)
library(clock)
#прочтение оригинальных данных
spiro_data <-  read_xlsx('/home/iz-user/Documents/univer/kursach/kursovaya.xlsx') %>%
janitor::clean_names()
#выделение моей даты
spyro_p11_3 <- spiro_data %>% filter(pacient == 'П11-3') %>%  select(c(1, 3:19))
time(spyro_p11_3[2,2])
spyro_p11_3[2]
time(spyro_p11_3[2])
View(spyro_p11_3)
spyro_p11_3 <- spyro_p11_3 %>%   mutate(vrema_obsled = time_parse(vrema_obsled, format = "%H:%M:%OS3"))
install.packages("lubridate")
library(lubridate)
hms(spyro_p11_3[2])
hms(spyro_p11_3[1, 2])
hms(spyro_p11_3[1:129, 2])
hms(spyro_p11_3[1, 2]) - hms(spyro_p11_3[2, 2])
hms(spyro_p11_3[2, 2]) - hms(spyro_p11_3[1, 2])
numeric(hms(spyro_p11_3[2, 2]) - hms(spyro_p11_3[1, 2]))
float(hms(spyro_p11_3[2, 2]) - hms(spyro_p11_3[1, 2]))
as.period(hms(spyro_p11_3[2, 2]) - hms(spyro_p11_3[1, 2]))
as.period(hms(spyro_p11_3[2, 2]) - hms(spyro_p11_3[1, 2]))
as.numeric(hms(spyro_p11_3[2, 2]) - hms(spyro_p11_3[1, 2]))
spyro_p11_3 <- spyro_p11_3 %>%   mutate(vrema_obsled = as.numeric(hms(vrema_obsled) - hms(vrema_obsled[1])))
library(tidyr)
library(dplyr)
spyro_p11_3 <- spyro_p11_3 %>%   mutate(vrema_obsled = as.numeric(hms(vrema_obsled) - hms(vrema_obsled[1])))
as.numeric(hms(vrema_obsled) - hms(vrema_obsled[1])
)
as.numeric(hms(spyro_p11_3$vrema_obsled) - hms(spyro_p11_3$vrema_obsled[1]))
as.numeric(hms(spyro_p11_3$vrema_obsled[1:129]) - hms(spyro_p11_3$vrema_obsled[1]))
hms(spyro_p11_3$vrema_obsled[1:3])
hms(spyro_p11_3$vrema_obsled[1])
hms(spyro_p11_3$vrema_obsled[2])
View(spyro_p11_3)
#прочтение оригинальных данных
spiro_data <-  read_xlsx('/home/iz-user/Documents/univer/kursach/kursovaya.xlsx') %>%
janitor::clean_names()
library(tidyr)
library(janitor)
library(readxl)
library(dplyr)
library(lubridate)
#прочтение оригинальных данных
spiro_data <-  read_xlsx('/home/iz-user/Documents/univer/kursach/kursovaya.xlsx') %>%
janitor::clean_names()
#выделение моей даты
spyro_p11_3 <- spiro_data %>% filter(pacient == 'П11-3') %>%  select(c(1, 3:19))
spyro_p11_3 <- spyro_p11_3 %>%   mutate(vrema_obsled = as.numeric(hms(vrema_obsled) - hms(vrema_obsled[1])))
View(spyro_p11_3)
library(ggplot2)
ggplot(data = spyro_p11_3, aes(vrema_obsled, rn_r50_om))
ggplot(data = spyro_p11_3, aes(vrema_obsled, rn_r50_om)) +
geom_point()
ggplot(data = spyro_p11_3, aes(vrema_obsled, spyro_p11_3[,3:])) +
ggplot(data = spyro_p11_3, aes(vrema_obsled, spyro_p11_3[,3:19])) +
geom_point()
ggplot(data = spyro_p11_3, aes(vrema_obsled, spyro_p11_3[,3:18])) +
geom_point()
spyro_p11_3
class(spyro_p11_3)
df_long <- spyro_p11_3 %>%
pivot_longer(cols = -c(vrema_obsled), names_to = "variable", values_to = "value")
df_long <- spyro_p11_3 %>%
pivot_longer(cols = -c(pacient, vrema_obsled), names_to = "variable", values_to = "value")
View(df_long)
ggplot(df_long, aes(x = vrema_obsled, y = value, color = variable)) +
geom_point() +
labs(title = "График времени для разных столбцов",
x = "Время",
y = "Значение") +
theme_minimal()
ggplot(data = spyro_p11_3, aes(vrema_obsled, rn_xc50_om)) +
geom_point()
?for
q
dim(spyro_p11_3)
dim(spyro_p11_3)[2]
for (i in 3:dim(spyro_p11_3)[2]){
ggplot(data = spyro_p11_3, aes(vrema_obsled, spyro_p11_3[i])) +
geom_point()
}
spyro_p11_3[3]
spyro_p11_3[4]
ggplot(data = spyro_p11_3, aes(vrema_obsled, as.vector(spyro_p11_3[i]))) +
geom_point()
spyro_p11_3[i]
for (i in 3:dim(spyro_p11_3)[2]){
ggplot(data = spyro_p11_3, aes(vrema_obsled, spyro_p11_3[i])) +
geom_point()
}
for (i in 3:dim(spyro_p11_3)[2]){
card <- ggplot(data = spyro_p11_3, aes(vrema_obsled, spyro_p11_3[i])) +
geom_point()
card
}
cars
card
for (i in 3:dim(spyro_p11_3)[2]){
card <- ggplot(aes(spyro_p11_3$vrema_obsled, spyro_p11_3[i])) +
geom_point()
card
}
ggplot(df_long, aes(x = vrema_obsled, y = value, color = variable)) +
geom_point() +
scale_color_gradient(low = "blue", high = "red", name = "Среднее значение")
df_long <- df_long %>%
group_by(variable) %>%
mutate(mean_value = mean(value))
ggplot(df_long, aes(x = vrema_obsled, y = value, color = mean_value)) +
geom_point() +
labs(title = "График времени для разных столбцов",
x = "Время",
y = "Значение") +
theme_minimal()
ggplot(df_long, aes(x = vrema_obsled, y = value, color = mean_value)) +
geom_point() +
scale_color_gradient(low = "blue", high = "red", name = "Среднее значение") +
labs(title = "График времени для разных столбцов",
x = "Время",
y = "Значение") +
theme_minimal()
ggplot(df_long, aes(x = vrema_obsled, y = value, color = variable)) +
geom_point() +
labs(title = "График времени для разных столбцов",
x = "Время",
y = "Значение") +
theme_minimal()
ggplot(data = spyro_p11_3, aes(vrema_obsled, rn_xc50_om)) +
geom_point()
ggplot(data = spyro_p11_3, aes(vrema_obsled, lf_r50_om)) +
geom_point()
ggplot(data = spyro_p11_3, aes(vrema_obsled, lf_r50_om)) +
geom_line()
ggplot(df_long, aes(x = vrema_obsled, y = value, color = variable)) +
geom_line() +
labs(title = "График времени для разных столбцов",
x = "Время",
y = "Значение") +
theme_minimal()
for (i in 3:dim(spyro_p11_3)[2]){
card <- ggplot(aes(spyro_p11_3$vrema_obsled, spyro_p11_3[1:129, i])) +
geom_point()
card
}
names(spyro_p11_3)
for (i in names(spyro_p11_3)[-1:2]){
card <- ggplot(aes(spyro_p11_3$vrema_obsled, spyro_p11_3[1:129, i])) +
geom_point()
card
}
names(spyro_p11_3)[-1:2]
names(spyro_p11_3)[-(1:2)]
card <- ggplot(data = spyro_p11_3, aes(vrema_obsled, i)) +
geom_point()
for (i in names(spyro_p11_3)[-(1:2)]){
card <- ggplot(data = spyro_p11_3, aes(vrema_obsled, i)) +
geom_point()
card
}
card
for (i in names(spyro_p11_3)[-(1:2)]){
ggplot(data = spyro_p11_3, aes(vrema_obsled, i)) +
geom_point()
}
for (i in names(spyro_p11_3)[-(1:2)]){
p <- ggplot(data = spyro_p11_3, aes(vrema_obsled, i)) +
geom_point()
print(p)
}
for (i in names(spyro_p11_3)[-(1:2)]){
p <- ggplot(data = spyro_p11_3, aes(vrema_obsled, i)) +
geom_point()
print(p)
}
for (i in names(spyro_p11_3)[-(1:2)]){
p <- ggplot(data = spyro_p11_3, aes_string(x = "vrema_obsled", y = i)) +
geom_point()
print(p)
}
for (i in names(spyro_p11_3)[-(1:2)]){
p <- ggplot(data = spyro_p11_3, aes_string(x = "vrema_obsled", y = i)) +
geom_line()
print(p)
}
for (i in names(spyro_p11_3)[-(1:2)]){
p <- ggplot(data = spyro_p11_3, aes_string(x = "vrema_obsled", y = i)) +
geom_line()
print(p)
}
library(zoo)
install.packages("zoo")
library(zoo)
rolled <- rollmean(serial, k =3)
serial <- 1:10
rolled <- rollmean(serial, k =3)
rolled
length(rolled   )
?rollmean
rolled <- rollmean(serial, k =3, align = "left")
rolled
rolled <- rollmean(serial, k =3, align = "center")
rolled
?filter
spyro_p11_3
?across
spyro_p11_3 %>% mutate(across(rn_r50_om:lf_phi5_grad, ~ rollmean(., k=3)))
rollmean(spyro_p11_3[3], k=3)
plot(rollmean(spyro_p11_3[3], k=3))
rlang::last_trace()
spyro_p11_3 %>% mutate(across(rn_r50_om:lf_phi5_grad, ~ rollmean(., k = 3)))
spyro_p11_3 %>% mutate(across(rn_r50_om:lf_phi5_grad, ~ с(.[1],rollmean(., k = 3),.[length(.)])))
spyro_p11_3 %>% mutate(across(rn_r50_om:lf_phi5_grad, ~ rollmean(., k = 3, fill = NA)))
spyro_p11_3 <- spyro_p11_3 %>% mutate(across(rn_r50_om:lf_phi5_grad, ~ rollmean(., k = 3, fill = NA)))
#делает все графики по отдельности
for (i in names(spyro_p11_3)[-(1:2)]){
p <- ggplot(data = spyro_p11_3, aes_string(x = "vrema_obsled", y = i)) +
geom_line()
print(p)
}
#прочтение оригинальных данных
spiro_data <-  read_xlsx('/home/iz-user/Documents/univer/kursach/kursovaya.xlsx') %>%
janitor::clean_names()
#выделение моей даты
spyro_p11_3 <- spiro_data %>% filter(pacient == 'П11-3') %>%  select(c(1, 3:19))
spyro_p11_3 <- spyro_p11_3 %>%   mutate(vrema_obsled = as.numeric(hms(vrema_obsled) - hms(vrema_obsled[1])))
#делает все графики по отдельности
for (i in names(spyro_p11_3)[-(1:2)]){
p <- ggplot(data = spyro_p11_3, aes_string(x = "vrema_obsled", y = i)) +
geom_line()
print(p)
}
spyro_p11_3 <- spyro_p11_3 %>% mutate(across(rn_r50_om:lf_phi5_grad, ~ rollmean(., k = 3, fill = NA)))
#делает все графики по отдельности
for (i in names(spyro_p11_3)[-(1:2)]){
p <- ggplot(data = spyro_p11_3, aes_string(x = "vrema_obsled", y = i)) +
geom_line()
print(p)
}
library(readxl)
df <- read_xlsx(https://raw.githubusercontent.com/hophee/kursach/main/kursovaya.xlsx)
df <- read_xlsx('https://raw.githubusercontent.com/hophee/kursach/main/kursovaya.xlsx')
?read_xlsx
install.packages('openxlsx')
library(openxlsx)
df <- read.xlsx('https://raw.githubusercontent.com/hophee/kursach/main/kursovaya.xlsx', sheet=1)
df
View(df)
df <- read.xlsx('https://raw.githubusercontent.com/hophee/kursach/main/kursovaya.xlsx', sheet=1) %>%
janitor::clean_names()
class(df)
df %>% filter(pacient == 'П11-3') %>%  select(c(1, 3:19))
#прочтение оригинальных данных
spiro_data <-  read.xlsx('/home/iz-user/Documents/univer/kursach/kursovaya.xlsx', sheet=1) %>%
janitor::clean_names()
#выделение моей даты
spyro_p11_3 <- spiro_data %>% filter(pacient == 'П11-3') %>%  select(c(1, 3:19))
spyro_p11_3 <- spyro_p11_3 %>%   mutate(vrema_obsled = as.numeric(hms(vrema_obsled) - hms(vrema_obsled[1])))
spyro_p11_3 <- spyro_p11_3 %>% mutate(across(rn_r50_om:lf_phi5_grad, ~ rollmean(., k = 3, fill = NA)))
#отображение
ggplot(data = spyro_p11_3, aes(vrema_obsled, lf_r50_om)) +
geom_line()
#переводит фрей в лонг формат, для отображения на одной картинке (бессмысленно, они слишком разных размерностей)
df_long <- spyro_p11_3 %>%
pivot_longer(cols = -c(pacient, vrema_obsled), names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = vrema_obsled, y = value, color = variable)) +
geom_line() +
labs(title = "График времени для разных столбцов",
x = "Время",
y = "Значение") +
theme_minimal()
#делает все графики по отдельности
for (i in names(spyro_p11_3)[-(1:2)]){
p <- ggplot(data = spyro_p11_3, aes_string(x = "vrema_obsled", y = i)) +
geom_line()
print(p)
}
#прочтение оригинальных данных
spiro_data <-  read.xlsx('https://raw.githubusercontent.com/hophee/kursach/main/kursovaya.xlsx', sheet=1) %>%
janitor::clean_names()
#выделение моей даты
spyro_p11_3 <- spiro_data %>% filter(pacient == 'П11-3') %>%  select(c(1, 3:19))
spyro_p11_3 <- spyro_p11_3 %>%   mutate(vrema_obsled = as.numeric(hms(vrema_obsled) - hms(vrema_obsled[1])))
spyro_p11_3 <- spyro_p11_3 %>% mutate(across(rn_r50_om:lf_phi5_grad, ~ rollmean(., k = 3, fill = NA)))
#отображение
ggplot(data = spyro_p11_3, aes(vrema_obsled, lf_r50_om)) +
geom_line()
#переводит фрей в лонг формат, для отображения на одной картинке (бессмысленно, они слишком разных размерностей)
df_long <- spyro_p11_3 %>%
pivot_longer(cols = -c(pacient, vrema_obsled), names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = vrema_obsled, y = value, color = variable)) +
geom_line() +
labs(title = "График времени для разных столбцов",
x = "Время",
y = "Значение") +
theme_minimal()
#делает все графики по отдельности
for (i in names(spyro_p11_3)[-(1:2)]){
p <- ggplot(data = spyro_p11_3, aes_string(x = "vrema_obsled", y = i)) +
geom_line()
print(p)
}
source("~/Documents/univer/kursach/kursach.R", echo=TRUE)
?filter.fft
??filter.fft
install.packages('spectral')
library(spectral)
## noisy signal with amplitude modulation
x <- seq(0,1, length.out=500)
# original data
y_org <- (1+sin(2*2*pi*x))*sin(20*2*pi*x)
# overlay some noise
y_noise <- y_org+rnorm(length(x),sd=0.2)
# filter the noisy data
y_filt <- filter.fft(y_noise,x,fc=20,BW=4,n=50)
# plot results
plot(x,y_noise,type="l",lwd=1,col="darkgrey",lty=2,ylab="y",main="Spectral filtering")
lines(x,y_org,lwd=5,col="grey")
lines(x,y_filt)
legend("topright",c("org","noisy","filtered"),col=c("grey","darkgrey","black")
,lty=c(1,2,1),lwd=c(5,1,1))
lines(x,y_filt)
# plot results
plot(x,y_noise,type="l",lwd=1,col="darkgrey",lty=2,ylab="y",main="Spectral filtering")
lines(x,y_filt)
filted <- filter.fft(spyro_p11_3$rn_r50_om, spyro_p11_3$vrema_obsled, fc=20,BW=4,n=50)
ggplot(aes(spyro_p11_3$vrema_obsled, filted)) +
geom_point()
library(ggplot2) #визуализация
ggplot(aes(spyro_p11_3$vrema_obsled, filted)) +
geom_point()
filted <- filter.fft(spyro_p11_3$rn_r50_om, spyro_p11_3$vrema_obsled, fc=20,BW=4,n=50)
filted
?signal
install.packages("gsignal")
library(gsignal)
?fft()
fft(spyro_p11_3$rn_r50_om)
matrix(spyro_p11_3$vrema_obsled, spyro_p11_3$rn_r50_om)
na,omit(spyro_p11_3)
na.omit(spyro_p11_3)
is.na(spyro_p11_3)
sum(is.na(spyro_p11_3))
matrix(spyro_p11_3$vrema_obsled, na.omit(spyro_p11_3$rn_r50_om))
plot(matrix(spyro_p11_3$vrema_obsled, na.omit(spyro_p11_3$rn_r50_om)))
filted <- filter.fft(spyro_p11_3$rn_r50_om, spyro_p11_3$vrema_obsled)
ggplot(aes(spyro_p11_3$vrema_obsled, filted)) +
geom_point()
plot(spyro_p11_3[2],filted)
filted
#делает все графики по отдельности
for (i in names(spyro_p11_3)[-(1:2)]){
p <- ggplot(data = spyro_p11_3, aes_string(x = "vrema_obsled", y = i)) +
geom_line()
print(p)
}
fft(na.omit(spyro_p11_3[3]))
fft(na.omit(spyro_p11_3$rn_xc50_om))
#прочтение оригинальных данных
spiro_data <-  read.xlsx('https://raw.githubusercontent.com/hophee/kursach/main/kursovaya.xlsx', sheet=1) %>%
janitor::clean_names()
library(tidyr)
library(dplyr)
library(janitor) #обработка загаловков таблицы в едином формате
library(openxlsx) #загрузка датасета с гита
library(lubridate) #работа с датами
library(ggplot2) #визуализация
library(zoo)
#прочтение оригинальных данных
spiro_data <-  read.xlsx('https://raw.githubusercontent.com/hophee/kursach/main/kursovaya.xlsx', sheet=1) %>%
janitor::clean_names()
#выделение нужной даты
spyro_p11_3 <- spiro_data %>% filter(pacient == 'П11-3') %>%  select(c(1, 3:19))
spyro_p11_3 <- spyro_p11_3 %>%   mutate(vrema_obsled = as.numeric(hms(vrema_obsled) - hms(vrema_obsled[1])))
fft(spyro_p11_3[3])
fft(spyro_p11_3$rn_r50_om)
plot(spyro_p11_3$vrema_obsled, fft(spyro_p11_3$rn_r50_om))
plot(spyro_p11_3$vrema_obsled, Mod(fft(spyro_p11_3$rn_r50_om)))
Mod(fft(spyro_p11_3$rn_r50_om))
fft(spyro_p11_3$rn_r50_om)
class(fft(spyro_p11_3$rn_r50_om))
fft(spyro_p11_3$rn_r50_om)^2
sqrt(fft(spyro_p11_3$rn_r50_om)^2)
class(sqrt(fft(spyro_p11_3$rn_r50_om)^2))
comp <- fft(spyro_p11_3$rn_r50_om)
comp <- Mod(comp)
class(comp)
comp
plot(comp)
?filter.fft
?fftfilt()
install.packages("signal")
detach("package:gsignal", unload = TRUE)
library(signal)
install.packages('signal')
library(gsignal)
?`gsignal-package`
?fftfilt()
t <- seq(0, 1, len = 10000)                          # 1 second sample
x <- sin(2* pi * t * 2.3) + 0.25 * rnorm(length(t))  # 2.3 Hz sinusoid+noise
filt <- rep(0.1, 10)                                 # filter kernel
y1 <- filter(filt, 1, x)                             # use normal convolution
y2 <- fftfilt(filt, x)                               # FFT convolution
plot(t, x, type = "l")
lines(t, y1, col = "red")
lines(t, y2, col = "blue")
y2 <- fftfilt(filt, y2)                               # FFT convolution
lines(t, y2, col = "blue")
y2 <- fftfilt(filt, y2)                               # FFT convolution
lines(t, y2, col = "blue")
filt
?fftfilt()
??fftfilt
fftfilt(time, spyro_p11_3$rn_r50_om)
class(time)
vremya <- spyro_p11_3$vrema_obsled
fftfilt(time, spyro_p11_3$rn_r50_om)
fftfilt(vremya, spyro_p11_3$rn_r50_om)
fourie <- fftfilt(vremya, spyro_p11_3$rn_r50_om)
plot(vremya, fourie)
library(tidyr)
library(dplyr)
library(janitor) #обработка загаловков таблицы в едином формате
library(openxlsx) #загрузка датасета с гита
library(lubridate) #работа с датами
library(ggplot2) #визуализация
library(zoo)
rollmean
names(spyro_p11_3)
plots <- lapply(3:18, function(i){
ggplot(spyro_p11_3, aes_string(x = 'vrema_obsled', y = names(spyro_p11_3)[i])) +
geom_line()
})
plots
getwd()
getwd()
setwd('~/Documents/univer/kursach')
getwd
getwd()
ls
ls()
cd ../
cd(..)
getwd()
dir.create("plots", showWarnings = FALSE)
lapply(names(plots), function(name) {
ggsave(filename = paste0("plots/", name, ".png"), plot = plots[[name]], width = 10, height = 6)
})
names(plots) <- names(df)[3:18]
lapply(names(plots), function(name) {
ggsave(filename = paste0("plots/", name, ".png"), plot = plots[[name]], width = 10, height = 6)
})
?ggsasve()
?ggsave()
lapply(names(plots), function(name) {
ggsave(filename = paste0("plots/", name, ".png"), plot = plots[[name]], width = 10, height = 6)
})
name(plots[1])
names(plots[1])
